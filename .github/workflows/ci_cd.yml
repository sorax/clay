name: CI/CD

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: "24"
          elixir-version: "1.13"

      - name: Cache deps
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: mix deps.get

  test:
    name: Test
    runs-on: ubuntu-latest
    needs:
      - build

    services:
      postgres:
        image: postgres
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: "24"
          elixir-version: "1.13"

      - name: Cache deps
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Run tests
        run: mix test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - test

    steps:
      - name: Trigger remote deploy-script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PI_HOSTNAME }}
          username: ${{ secrets.PI_USERNAME }}
          key: ${{ secrets.PI_SSH_KEY }}
          port: ${{ secrets.PI_SSH_PORT }}
          script: ./deploy.sh
